# alea6
# large coefficients, easy images
var := [x0,x1,x2,x3,x4,x5]:
sys := [5*x0^2*x3+37*x1*x3*x4+32*x1*x3*x5+21*x3*x5+55*x4*x5,
39*x0*x1*x5+23*x1^2*x4+57*x1*x2*x4+56*x1*x4^2+10*x2^2+52*x3*x4*x5,
33*x0^2*x3+51*x0^2+42*x0*x3*x5+51*x1^2*x4+32*x1*x3^2+x5^3,
44*x0*x3^2+42*x1*x3+47*x1*x4^2+12*x2*x3+2*x2*x4*x5+43*x3*x4^2,
49*x0^2*x2+11*x0*x1*x2+39*x0*x3*x4+44*x0*x3*x4+54*x0*x3+45*x1^2*x4,
48*x0*x2*x3+2*x2^2*x3+59*x2^2*x5+17*x2+36*x3^3+45*x4]:

# bayes148
# sparse with many monomial divisions
var := [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32]:
sys := [-x23*x32+x24*x31, -x22*x32+x24*x30, -x22*x31+x23*x30, -x21*x32+x24*x29, -x21*x31+x23*x29, -x21*x30+x22*x29, -x12*x32+x16*x28,  -x19*x28+x20*x27,
-x11*x31+x15*x27, -x18*x28+x20*x26, -x18*x27+x19*x26, -x10*x30+x14*x26, -x17*x28+x20*x25, -x17*x27+x19*x25, -x17*x26+x18*x25, -x9*x29+x13*x25, x20*x8-x24*x4,
-x17*x20-x17*x24-2*x17*x28-x17*x32+x18*x19+x18*x23+2*x18*x27+x18*x31+x19*x22+x19*x30-x20*x21-x20*x29-x21*x24-x21*x28-2*x21*x32+x22*x23+x22*x27+2*x22*x31+x23*x26-x24*x25-x25*x28-x25*x32+x26*x27+x26*x31+x27*x30-x28*x29-x29*x32+x30*x31,
x19*x7-x23*x3, x18*x6-x2*x22, -x1*x21+x17*x5]:

# stupid test
# small test for checking
var := [x0,x1,x2,x3,x4,x5]:
sys := [2*x0 + x1, x0]:

# cyclic7
# all-around challenge
var := [x0,x1,x2,x3,x4,x5,x6]:
sys := [x0+x1+x2+x3+x4+x5+x6,
x0*x1+x0*x6+x1*x2+x2*x3+x3*x4+x4*x5+x5*x6,
x0*x1*x2+x0*x1*x6+x0*x5*x6+x1*x2*x3+x2*x3*x4+x3*x4*x5+x4*x5*x6,
x0*x1*x2*x3+x0*x1*x2*x6+x0*x1*x5*x6+x0*x4*x5*x6+x1*x2*x3*x4+x2*x3*x4*x5+x3*x4*x5*x6,
x0*x1*x2*x3*x4+x0*x1*x2*x3*x6+x0*x1*x2*x5*x6+x0*x1*x4*x5*x6+x0*x3*x4*x5*x6+x1*x2*x3*x4*x5+x2*x3*x4*x5*x6,
x0*x1*x2*x3*x4*x5+x0*x1*x2*x3*x4*x6+x0*x1*x2*x3*x5*x6+x0*x1*x2*x4*x5*x6+x0*x1*x3*x4*x5*x6+x0*x2*x3*x4*x5*x6+x1*x2*x3*x4*x5*x6,
x0*x1*x2*x3*x4*x5*x6-1]:

# cyclic8
# all-around challenge
var := [x0,x1,x2,x3,x4,x5,x6,x7]:
sys := [x0+x1+x2+x3+x4+x5+x6+x7,
x0*x1+x0*x7+x1*x2+x2*x3+x3*x4+x4*x5+x5*x6+x6*x7,
x0*x1*x2+x0*x1*x7+x0*x6*x7+x1*x2*x3+x2*x3*x4+x3*x4*x5+x4*x5*x6+x5*x6*x7,
x0*x1*x2*x3+x0*x1*x2*x7+x0*x1*x6*x7+x0*x5*x6*x7+x1*x2*x3*x4+x2*x3*x4*x5+x3*x4*x5*x6+x4*x5*x6*x7,
x0*x1*x2*x3*x4+x0*x1*x2*x3*x7+x0*x1*x2*x6*x7+x0*x1*x5*x6*x7+x0*x4*x5*x6*x7+x1*x2*x3*x4*x5+x2*x3*x4*x5*x6+x3*x4*x5*x6*x7,
x0*x1*x2*x3*x4*x5+x0*x1*x2*x3*x4*x7+x0*x1*x2*x3*x6*x7+x0*x1*x2*x5*x6*x7+x0*x1*x4*x5*x6*x7+x0*x3*x4*x5*x6*x7+x1*x2*x3*x4*x5*x6+x2*x3*x4*x5*x6*x7,
x0*x1*x2*x3*x4*x5*x6+x0*x1*x2*x3*x4*x5*x7+x0*x1*x2*x3*x4*x6*x7+x0*x1*x2*x3*x5*x6*x7+x0*x1*x2*x4*x5*x6*x7+x0*x1*x3*x4*x5*x6*x7+x0*x2*x3*x4*x5*x6*x7+x1*x2*x3*x4*x5*x6*x7,
x0*x1*x2*x3*x4*x5*x6*x7-1]:

# cyclic9
# all-around challenge
var := [x0,x1,x2,x3,x4,x5,x6,x7,x8]:
sys := [x0+x1+x2+x3+x4+x5+x6+x7+x8,
x0*x1+x0*x8+x1*x2+x2*x3+x3*x4+x4*x5+x5*x6+x6*x7+x7*x8,
x0*x1*x2+x0*x1*x8+x0*x7*x8+x1*x2*x3+x2*x3*x4+x3*x4*x5+x4*x5*x6+x5*x6*x7+x6*x7*x8,
x0*x1*x2*x3+x0*x1*x2*x8+x0*x1*x7*x8+x0*x6*x7*x8+x1*x2*x3*x4+x2*x3*x4*x5+x3*x4*x5*x6+x4*x5*x6*x7+x5*x6*x7*x8,
x0*x1*x2*x3*x4+x0*x1*x2*x3*x8+x0*x1*x2*x7*x8+x0*x1*x6*x7*x8+x0*x5*x6*x7*x8+x1*x2*x3*x4*x5+x2*x3*x4*x5*x6+x3*x4*x5*x6*x7+x4*x5*x6*x7*x8,
x0*x1*x2*x3*x4*x5+x0*x1*x2*x3*x4*x8+x0*x1*x2*x3*x7*x8+x0*x1*x2*x6*x7*x8+x0*x1*x5*x6*x7*x8+x0*x4*x5*x6*x7*x8+x1*x2*x3*x4*x5*x6+x2*x3*x4*x5*x6*x7+x3*x4*x5*x6*x7*x8,
x0*x1*x2*x3*x4*x5*x6+x0*x1*x2*x3*x4*x5*x8+x0*x1*x2*x3*x4*x7*x8+x0*x1*x2*x3*x6*x7*x8+x0*x1*x2*x5*x6*x7*x8+x0*x1*x4*x5*x6*x7*x8+x0*x3*x4*x5*x6*x7*x8+x1*x2*x3*x4*x5*x6*x7+x2*x3*x4*x5*x6*x7*x8,
x0*x1*x2*x3*x4*x5*x6*x7+x0*x1*x2*x3*x4*x5*x6*x8+x0*x1*x2*x3*x4*x5*x7*x8+x0*x1*x2*x3*x4*x6*x7*x8+x0*x1*x2*x3*x5*x6*x7*x8+x0*x1*x2*x4*x5*x6*x7*x8+x0*x1*x3*x4*x5*x6*x7*x8+x0*x2*x3*x4*x5*x6*x7*x8+x1*x2*x3*x4*x5*x6*x7*x8,
x0*x1*x2*x3*x4*x5*x6*x7*x8-1]:

# eco12
# dense with modest coefficients
var := [x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12]:
sys := [
x1*x12*x2 + x1*x12 + x10*x11*x12 + x10*x12*x9 + x12*x2*x3 + x12*x3*x4 + x12* x4*x5 + x12*x5*x6 + x12*x6*x7 + x12*x7*x8 + x12*x8*x9 - 1,
x1*x12*x3 + x10*x12*x8 + x11*x12*x9 + x12*x2*x4 + x12*x2 + x12*x3*x5 + x12* x4*x6 + x12*x5*x7 + x12*x6*x8 + x12*x7*x9 - 2,
x1*x12*x4 + x10*x12*x7 + x11*x12*x8 + x12*x2*x5 + x12*x3*x6 + x12*x3 + x12* x4*x7 + x12*x5*x8 + x12*x6*x9 - 3,
x1*x12*x5 + x10*x12*x6 + x11*x12*x7 + x12*x2*x6 + x12*x3*x7 + x12*x4*x8 + x12*x4 + x12*x5*x9 - 4,
x1*x12*x6 + x10*x12*x5 + x11*x12*x6 + x12*x2*x7 + x12*x3*x8 + x12*x4*x9 + x12*x5 - 5,
x1*x12*x7 + x10*x12*x4 + x11*x12*x5 + x12*x2*x8 + x12*x3*x9 + x12*x6 - 6,
x1*x12*x8 + x10*x12*x3 + x11*x12*x4 + x12*x2*x9 + x12*x7 - 7,
x1*x12*x9 + x10*x12*x2 + x11*x12*x3 + x12*x8 - 8,
x1*x10*x12 + x11*x12*x2 + x12*x9 - 9,
x1*x11*x12 + x10*x12 - 10,
x11*x12 - 11,
x1 + x10 + x11 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + 1
]:

# gametwo7
# dense linear algebra
var := [x1,x2,x3,x4,x5,x6,x7]:
sys := [
3821*x2*x3*x4*x5*x6*x7-7730*x2*x3*x4*x5*x6-164*x2*x3*x4*x5*x7-2536*x2*x3*x4*x6*x7-4321*x2*x3*x5*x6*x7-2161*x2*x4*x5*x6*x7-2188*x3*x4*x5*x6*x7-486*x2*x3*x4*x5+3491*x2*x3*x4*x6+4247*x2*x3*x5*x6+3528*x2*x4*x5*x6+2616*x3*x4*x5*x6-101*x2*x3*x4*x7+1765*x2*x3*x5*x7+258*x2*x4*x5*x7-378*x3*x4*x5*x7+1246*x2*x3*x6*x7+2320*x2*x4*x6*x7+1776*x3*x4*x6*x7+1715*x2*x5*x6*x7+728*x3*x5*x6*x7+842*x4*x5*x6*x7+69*x2*x3*x4-1660*x2*x3*x5+1863*x2*x4*x5+1520*x3*x4*x5-245*x2*x3*x6-804*x2*x4*x6-2552*x3*x4*x6-3152*x2*x5*x6+40*x3*x5*x6-1213*x4*x5*x6+270*x2*x3*x7-851*x2*x4*x7+327*x3*x4*x7-1151*x2*x5*x7+1035*x3*x5*x7-161*x4*x5*x7-230*x2*x6*x7-294*x3*x6*x7-973*x4*x6*x7-264*x5*x6*x7+874*x2*x3-2212*x2*x4+168*x3*x4+511*x2*x5-918*x3*x5-2017*x4*x5-76*x2*x6+465*x3*x6+1629*x4*x6+856*x5*x6-54*x2*x7-1355*x3*x7+227*x4*x7+77*x5*x7-220*x6*x7-696*x2+458*x3+486*x4+661*x5-650*x6+671*x7-439,
-6157*x1*x3*x4*x5*x6*x7+13318*x1*x3*x4*x5*x6+5928*x1*x3*x4*x5*x7+1904*x1*x3*x4*x6*x7+2109*x1*x3*x5*x6*x7+8475*x1*x4*x5*x6*x7+2878*x3*x4*x5*x6*x7-8339*x1*x3*x4*x5-2800*x1*x3*x4*x6-9649*x1*x3*x5*x6-10964*x1*x4*x5*x6-4481*x3*x4*x5*x6+251*x1*x3*x4*x7-4245*x1*x3*x5*x7-7707*x1*x4*x5*x7-2448*x3*x4*x5*x7+1057*x1*x3*x6*x7-3605*x1*x4*x6*x7+546*x3*x4*x6*x7-3633*x1*x5*x6*x7-699*x3*x5*x6*x7-4126*x4*x5*x6*x7-730*x1*x3*x4+5519*x1*x3*x5+8168*x1*x4*x5+4366*x3*x4*x5+2847*x1*x3*x6+2058*x1*x4*x6-1416*x3*x4*x6+8004*x1*x5*x6+4740*x3*x5*x6+5361*x4*x5*x6-677*x1*x3*x7+1755*x1*x4*x7-760*x3*x4*x7+3384*x1*x5*x7+2038*x3*x5*x7+4119*x4*x5*x7+812*x1*x6*x7+11*x3*x6*x7+2022*x4*x6*x7+2642*x5*x6*x7+1276*x1*x3-1723*x1*x4+121*x3*x4-6456*x1*x5-3710*x3*x5-4525*x4*x5-2187*x1*x6-1559*x3*x6-848*x4*x6-4041*x5*x6-83*x1*x7-12*x3*x7-1180*x4*x7-2747*x5*x7-1970*x6*x7+2575*x1-161*x3+2149*x4+4294*x5+1687*x6+958*x7-1950,
182*x1*x2*x4*x5*x6*x7-2824*x1*x2*x4*x5*x6-3513*x1*x2*x4*x5*x7-3386*x1*x2*x4*x6*x7-2330*x1*x2*x5*x6*x7-2838*x1*x4*x5*x6*x7+1294*x2*x4*x5*x6*x7+4764*x1*x2*x4*x5+1647*x1*x2*x4*x6+4221*x1*x2*x5*x6+814*x1*x4*x5*x6+2738*x2*x4*x5*x6+4057*x1*x2*x4*x7+2403*x1*x2*x5*x7+2552*x1*x4*x5*x7+471*x2*x4*x5*x7+448*x1*x2*x6*x7+2336*x1*x4*x6*x7+1617*x2*x4*x6*x7+2220*x1*x5*x6*x7-1543*x2*x5*x6*x7+402*x4*x5*x6*x7-5184*x1*x2*x4-3983*x1*x2*x5+44*x1*x4*x5-1327*x2*x4*x5-581*x1*x2*x6-389*x1*x4*x6-2722*x2*x4*x6+443*x1*x5*x6-2893*x2*x5*x6-154*x4*x5*x6-1277*x1*x2*x7-2018*x1*x4*x7-509*x2*x4*x7-1254*x1*x5*x7+602*x2*x5*x7-464*x4*x5*x7-647*x1*x6*x7+922*x2*x6*x7-1463*x4*x6*x7+729*x5*x6*x7+2665*x1*x2+591*x1*x4+981*x2*x4-444*x1*x5+1818*x2*x5-1985*x4*x5-1818*x1*x6+197*x2*x6+1038*x4*x6+340*x5*x6+399*x1*x7-835*x2*x7+787*x4*x7-753*x5*x7-221*x6*x7+481*x1+260*x2+1713*x4+1219*x5+794*x6+762*x7-1231,
2923*x1*x2*x3*x5*x6*x7-4328*x1*x2*x3*x5*x6-3674*x1*x2*x3*x5*x7-3291*x1*x2*x3*x6*x7-4955*x1*x2*x5*x6*x7-8*x1*x3*x5*x6*x7-135*x2*x3*x5*x6*x7+7784*x1*x2*x3*x5+3471*x1*x2*x3*x6+1544*x1*x2*x5*x6+1607*x1*x3*x5*x6+1710*x2*x3*x5*x6+2434*x1*x2*x3*x7+1408*x1*x2*x5*x7-215*x1*x3*x5*x7+507*x2*x3*x5*x7+2208*x1*x2*x6*x7+1920*x1*x3*x6*x7-389*x2*x3*x6*x7+1304*x1*x5*x6*x7+2480*x2*x5*x6*x7+102*x3*x5*x6*x7-2683*x1*x2*x3-3508*x1*x2*x5-3505*x1*x3*x5-2400*x2*x3*x5-2236*x1*x2*x6-1727*x1*x3*x6-1354*x2*x3*x6-1022*x1*x5*x6-2099*x2*x5*x6-918*x3*x5*x6-495*x1*x2*x7-109*x1*x3*x7+474*x2*x3*x7+268*x1*x5*x7+1084*x2*x5*x7-190*x3*x5*x7-666*x1*x6*x7-497*x2*x6*x7+615*x3*x6*x7-912*x5*x6*x7+473*x1*x2+742*x1*x3+186*x2*x3+1021*x1*x5+2556*x2*x5+2312*x3*x5+1075*x1*x6+920*x2*x6+164*x3*x6+80*x5*x6-199*x1*x7-1270*x2*x7-1050*x3*x7-724*x5*x7+136*x6*x7+740*x1-474*x2+37*x3-1056*x5+303*x6+833*x7+736,
4990*x1*x2*x3*x4*x6*x7-3067*x1*x2*x3*x4*x6-1661*x1*x2*x3*x4*x7-4064*x1*x2*x3*x6*x7-223*x1*x2*x4*x6*x7-5229*x1*x3*x4*x6*x7-4636*x2*x3*x4*x6*x7+5720*x1*x2*x3*x4+4872*x1*x2*x3*x6+1643*x1*x2*x4*x6+4536*x1*x3*x4*x6+2451*x2*x3*x4*x6+1264*x1*x2*x3*x7+70*x1*x2*x4*x7+2213*x1*x3*x4*x7+1734*x2*x3*x4*x7+1698*x1*x2*x6*x7+3799*x1*x3*x6*x7+1622*x2*x3*x6*x7+901*x1*x4*x6*x7-496*x2*x4*x6*x7+3782*x3*x4*x6*x7-5591*x1*x2*x3-1303*x1*x2*x4-6383*x1*x3*x4-2332*x2*x3*x4-3179*x1*x2*x6-6257*x1*x3*x6-3654*x2*x3*x6-1830*x1*x4*x6-1473*x2*x4*x6-3278*x3*x4*x6-1462*x1*x2*x7-1495*x1*x3*x7-468*x2*x3*x7-400*x1*x4*x7+431*x2*x4*x7-1907*x3*x4*x7-1547*x1*x6*x7-214*x2*x6*x7-1423*x3*x6*x7-1625*x4*x6*x7+5708*x1*x2+3809*x1*x3+2053*x2*x3+2824*x1*x4+1122*x2*x4+3653*x3*x4+3658*x1*x6+3001*x2*x6+3890*x3*x6+2371*x4*x6+602*x1*x7+185*x2*x7+899*x3*x7+963*x4*x7+560*x6*x7-4557*x1-3536*x2-1635*x3-2552*x4-2595*x6-207*x7+2740,
-1407*x1*x2*x3*x4*x5*x7+4444*x1*x2*x3*x4*x5+2350*x1*x2*x3*x4*x7+5424*x1*x2*x3*x5*x7-2524*x1*x2*x4*x5*x7-985*x1*x3*x4*x5*x7-431*x2*x3*x4*x5*x7-2662*x1*x2*x3*x4-5342*x1*x2*x3*x5-39*x1*x2*x4*x5-2525*x1*x3*x4*x5-2650*x2*x3*x4*x5-3553*x1*x2*x3*x7-71*x1*x2*x4*x7-3268*x1*x3*x4*x7-1140*x2*x3*x4*x7-702*x1*x2*x5*x7-924*x1*x3*x5*x7-2198*x2*x3*x5*x7+4087*x1*x4*x5*x7+2709*x2*x4*x5*x7+587*x3*x4*x5*x7+968*x1*x2*x3-150*x1*x2*x4+909*x1*x3*x4+4587*x2*x3*x4+929*x1*x2*x5+1804*x1*x3*x5+2226*x2*x3*x5-916*x1*x4*x5+906*x2*x4*x5+2735*x3*x4*x5+1894*x1*x2*x7+2998*x1*x3*x7+1611*x2*x3*x7+304*x1*x4*x7-1601*x2*x4*x7+2066*x3*x4*x7-1971*x1*x5*x7-480*x2*x5*x7-500*x3*x5*x7-2617*x4*x5*x7-532*x1*x2+2016*x1*x3-2574*x2*x3+529*x1*x4-1251*x2*x4-2082*x3*x4+280*x1*x5-852*x2*x5-476*x3*x5-340*x4*x5-924*x1*x7+253*x2*x7-1090*x3*x7+170*x4*x7+1204*x5*x7-869*x1+1394*x2-264*x3+719*x4+219*x5-128*x7+506,
-901*x1*x2*x3*x4*x5*x6+1805*x1*x2*x3*x4*x5-1103*x1*x2*x3*x4*x6-1746*x1*x2*x3*x5*x6-1968*x1*x2*x4*x5*x6+3957*x1*x3*x4*x5*x6+1293*x2*x3*x4*x5*x6-523*x1*x2*x3*x4-2498*x1*x2*x3*x5+693*x1*x2*x4*x5-2805*x1*x3*x4*x5-722*x2*x3*x4*x5-770*x1*x2*x3*x6+1088*x1*x2*x4*x6-232*x1*x3*x4*x6+2657*x2*x3*x4*x6+3281*x1*x2*x5*x6-1066*x1*x3*x5*x6+240*x2*x3*x5*x6-1174*x1*x4*x5*x6+1304*x2*x4*x5*x6-2070*x3*x4*x5*x6+2571*x1*x2*x3+115*x1*x2*x4+3899*x1*x3*x4-4641*x2*x3*x4-752*x1*x2*x5+1531*x1*x3*x5+1178*x2*x3*x5+11*x1*x4*x5-1144*x2*x4*x5-1701*x3*x4*x5+592*x1*x2*x6+1140*x1*x3*x6+130*x2*x3*x6+304*x1*x4*x6-2273*x2*x4*x6-1224*x3*x4*x6-2*x1*x5*x6-1090*x2*x5*x6+585*x3*x5*x6+670*x4*x5*x6-1867*x1*x2-4780*x1*x3+1079*x2*x3-2435*x1*x4+2901*x2*x4+2073*x3*x4+499*x1*x5+908*x2*x5+323*x3*x5+1631*x4*x5-966*x1*x6-315*x2*x6-481*x3*x6+759*x4*x6-595*x5*x6+3233*x1-1978*x2+729*x3-1184*x4-40*x5+446*x6+282
]:

# jason210
# sparse with many monomial divisions
var := [x1, x2, x3, x4, x5, x6, x7, x8]:
sys := [x1^2*x3^4+x1*x2*x3^2*x5^2+x1*x2*x3*x4*x5*x7+x1*x2*x3*x4*x6*x8+x1*x2*x4^2*x6^2+x2^2*x4^4, x2^6, x1^6]:

# katsura7
var := [x0, x1, x2, x3, x4, x5, x6, x7]:
sys := [2*x0*x6+2*x1*x5+2*x1*x7+2*x2*x4+x3^2-x6,
2*x0*x5+2*x1*x4+2*x1*x6+2*x2*x3+2*x2*x7-x5,
2*x0*x4+2*x1*x3+2*x1*x5+x2^2+2*x2*x6+2*x3*x7-x4,
2*x0*x3+2*x1*x2+2*x1*x4+2*x2*x5+2*x3*x6+2*x4*x7-x3,
2*x0*x2+x1^2+2*x1*x3+2*x2*x4+2*x3*x5+2*x4*x6+2*x5*x7-x2,
2*x0*x1+2*x1*x2+2*x2*x3+2*x3*x4+2*x4*x5+2*x5*x6+2*x6*x7-x1,
x0^2+2*x1^2+2*x2^2+2*x3^2+2*x4^2+2*x5^2+2*x6^2+2*x7^2-x0,
2*x7+2*x6+2*x5+2*x4+2*x3+2*x2+2*x1+x0-1]:

# katsura8
var := [x0, x1, x2, x3, x4, x5, x6, x7, x8]:
sys := [2*x0*x7+2*x1*x6+2*x1*x8+2*x2*x5+2*x3*x4-x7,
2*x0*x6+2*x1*x5+2*x1*x7+2*x2*x4+2*x2*x8+x3^2-x6,
2*x0*x5+2*x1*x4+2*x1*x6+2*x2*x3+2*x2*x7+2*x3*x8-x5,
2*x0*x4+2*x1*x3+2*x1*x5+x2^2+2*x2*x6+2*x3*x7+2*x4*x8-x4,
2*x0*x3+2*x1*x2+2*x1*x4+2*x2*x5+2*x3*x6+2*x4*x7+2*x5*x8-x3,
2*x0*x2+x1^2+2*x1*x3+2*x2*x4+2*x3*x5+2*x4*x6+2*x5*x7+2*x6*x8-x2,
2*x0*x1+2*x1*x2+2*x2*x3+2*x3*x4+2*x4*x5+2*x5*x6+2*x6*x7+2*x7*x8-x1,
x0^2+2*x1^2+2*x2^2+2*x3^2+2*x4^2+2*x5^2+2*x6^2+2*x7^2+2*x8^2-x0,
2*x8+2*x7+2*x6+2*x5+2*x4+2*x3+2*x2+2*x1+x0-1]:

# katsura9
# dense with many zero-reductions
var := [x0, x1, x2, x3, x4, x5, x6, x7, x8, x9]:
sys := [2*x0*x8+2*x1*x7+2*x1*x9+2*x2*x6+2*x3*x5+x4^2-x8,
2*x0*x7+2*x1*x6+2*x1*x8+2*x2*x5+2*x2*x9+2*x3*x4-x7,
2*x0*x6+2*x1*x5+2*x1*x7+2*x2*x4+2*x2*x8+x3^2+2*x3*x9-x6,
2*x0*x5+2*x1*x4+2*x1*x6+2*x2*x3+2*x2*x7+2*x3*x8+2*x4*x9-x5,
2*x0*x4+2*x1*x3+2*x1*x5+x2^2+2*x2*x6+2*x3*x7+2*x4*x8+2*x5*x9-x4,
2*x0*x3+2*x1*x2+2*x1*x4+2*x2*x5+2*x3*x6+2*x4*x7+2*x5*x8+2*x6*x9-x3,
2*x0*x2+x1^2+2*x1*x3+2*x2*x4+2*x3*x5+2*x4*x6+2*x5*x7+2*x6*x8+2*x7*x9-x2,
2*x0*x1+2*x1*x2+2*x2*x3+2*x3*x4+2*x4*x5+2*x5*x6+2*x6*x7+2*x7*x8+2*x8*x9-x1,
x0^2+2*x1^2+2*x2^2+2*x3^2+2*x4^2+2*x5^2+2*x6^2+2*x7^2+2*x8^2+2*x9^2-x0,
2*x9+2*x8+2*x7+2*x6+2*x5+2*x4+2*x3+2*x2+2*x1+x0-1]:

# katsura10
# dense with many zero-reductions
var := [x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]:
sys := [2*x0*x9+2*x1*x10+2*x1*x8+2*x2*x7+2*x3*x6+2*x4*x5-x9,
2*x0*x8+2*x1*x7+2*x1*x9+2*x10*x2+2*x2*x6+2*x3*x5+x4^2-x8,
2*x0*x7+2*x1*x6+2*x1*x8+2*x10*x3+2*x2*x5+2*x2*x9+2*x3*x4-x7,
2*x0*x6+2*x1*x5+2*x1*x7+2*x10*x4+2*x2*x4+2*x2*x8+x3^2+2*x3*x9-x6,
2*x0*x5+2*x1*x4+2*x1*x6+2*x10*x5+2*x2*x3+2*x2*x7+2*x3*x8+2*x4*x9-x5,
2*x0*x4+2*x1*x3+2*x1*x5+2*x10*x6+x2^2+2*x2*x6+2*x3*x7+2*x4*x8+2*x5*x9-x4,
2*x0*x3+2*x1*x2+2*x1*x4+2*x10*x7+2*x2*x5+2*x3*x6+2*x4*x7+2*x5*x8+2*x6*x9-x3,
2*x0*x2+x1^2+2*x1*x3+2*x10*x8+2*x2*x4+2*x3*x5+2*x4*x6+2*x5*x7+2*x6*x8+2*x7*x9-x2,
2*x0*x1+2*x1*x2+2*x10*x9+2*x2*x3+2*x3*x4+2*x4*x5+2*x5*x6+2*x6*x7+2*x7*x8+2*x8*x9-x1,
x0^2+2*x1^2+2*x10^2+2*x2^2+2*x3^2+2*x4^2+2*x5^2+2*x6^2+2*x7^2+2*x8^2+2*x9^2-x0,
2*x10+2*x9+2*x8+2*x7+2*x6+2*x5+2*x4+2*x3+2*x2+2*x1+x0-1]:

# katsura11
# dense with many zero-reductions
var := [x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11]:
sys := [2*x0*x10+2*x1*x11+2*x1*x9+2*x2*x8+2*x3*x7+2*x4*x6+x5^2-x10,
2*x0*x9+2*x1*x10+2*x1*x8+2*x11*x2+2*x2*x7+2*x3*x6+2*x4*x5-x9,
2*x0*x8+2*x1*x7+2*x1*x9+2*x10*x2+2*x11*x3+2*x2*x6+2*x3*x5+x4^2-x8,
2*x0*x7+2*x1*x6+2*x1*x8+2*x10*x3+2*x11*x4+2*x2*x5+2*x2*x9+2*x3*x4-x7,
2*x0*x6+2*x1*x5+2*x1*x7+2*x10*x4+2*x11*x5+2*x2*x4+2*x2*x8+x3^2+2*x3*x9-x6,
2*x0*x5+2*x1*x4+2*x1*x6+2*x10*x5+2*x11*x6+2*x2*x3+2*x2*x7+2*x3*x8+2*x4*x9-x5,
2*x0*x4+2*x1*x3+2*x1*x5+2*x10*x6+2*x11*x7+x2^2+2*x2*x6+2*x3*x7+2*x4*x8+2*x5*x9-x4,
2*x0*x3+2*x1*x2+2*x1*x4+2*x10*x7+2*x11*x8+2*x2*x5+2*x3*x6+2*x4*x7+2*x5*x8+2*x6*x9-x3,
2*x0*x2+x1^2+2*x1*x3+2*x10*x8+2*x11*x9+2*x2*x4+2*x3*x5+2*x4*x6+2*x5*x7+2*x6*x8+2*x7*x9-x2,
2*x0*x1+2*x1*x2+2*x10*x11+2*x10*x9+2*x2*x3+2*x3*x4+2*x4*x5+2*x5*x6+2*x6*x7+2*x7*x8+2*x8*x9-x1,
x0^2+2*x1^2+2*x10^2+2*x11^2+2*x2^2+2*x3^2+2*x4^2+2*x5^2+2*x6^2+2*x7^2+2*x8^2+2*x9^2-x0,
2*x11+2*x10+2*x9+2*x8+2*x7+2*x6+2*x5+2*x4+2*x3+2*x2+2*x1+x0-1]:

# katsura12
# dense with many zero-reductions
var := [x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12]:
sys := [2*x0*x11+2*x1*x10+2*x1*x12+2*x2*x9+2*x3*x8+2*x4*x7+2*x5*x6-x11,
2*x0*x10+2*x1*x11+2*x1*x9+2*x12*x2+2*x2*x8+2*x3*x7+2*x4*x6+x5^2-x10,
2*x0*x9+2*x1*x10+2*x1*x8+2*x11*x2+2*x12*x3+2*x2*x7+2*x3*x6+2*x4*x5-x9,
2*x0*x8+2*x1*x7+2*x1*x9+2*x10*x2+2*x11*x3+2*x12*x4+2*x2*x6+2*x3*x5+x4^2-x8,
2*x0*x7+2*x1*x6+2*x1*x8+2*x10*x3+2*x11*x4+2*x12*x5+2*x2*x5+2*x2*x9+2*x3*x4-x7,
2*x0*x6+2*x1*x5+2*x1*x7+2*x10*x4+2*x11*x5+2*x12*x6+2*x2*x4+2*x2*x8+x3^2+2*x3*x9-x6,
2*x0*x5+2*x1*x4+2*x1*x6+2*x10*x5+2*x11*x6+2*x12*x7+2*x2*x3+2*x2*x7+2*x3*x8+2*x4*x9-x5,
2*x0*x4+2*x1*x3+2*x1*x5+2*x10*x6+2*x11*x7+2*x12*x8+x2^2+2*x2*x6+2*x3*x7+2*x4*x8+2*x5*x9-x4,
2*x0*x3+2*x1*x2+2*x1*x4+2*x10*x7+2*x11*x8+2*x12*x9+2*x2*x5+2*x3*x6+2*x4*x7+2*x5*x8+2*x6*x9-x3,
2*x0*x2+x1^2+2*x1*x3+2*x10*x12+2*x10*x8+2*x11*x9+2*x2*x4+2*x3*x5+2*x4*x6+2*x5*x7+2*x6*x8+2*x7*x9-x2,
2*x0*x1+2*x1*x2+2*x10*x11+2*x10*x9+2*x11*x12+2*x2*x3+2*x3*x4+2*x4*x5+2*x5*x6+2*x6*x7+2*x7*x8+2*x8*x9-x1,
x0^2+2*x1^2+2*x10^2+2*x11^2+2*x12^2+2*x2^2+2*x3^2+2*x4^2+2*x5^2+2*x6^2+2*x7^2+2*x8^2+2*x9^2-x0,
2*x12+2*x1+2*x11+x0+2*x10+2*x9+2*x2+2*x8+2*x3+2*x7+2*x4+2*x6+2*x5-1]:

# mayr42
# sparse with many pair updates
var := [x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51]:
sys := [
-x10*x51+x4*x49, x3*x48-x51*x9, x2*x47-x51*x8, x1*x46-x51*x7,
x4*x44-x49*x9, x3*x43-x48*x8, x2*x42-x47*x7, x1*x41-x46*x6,
x39*x4-x49*x9, x3*x38-x48*x8, x2*x37-x47*x7, x1*x36-x46*x6, x34*x9-x49*x9, x34*x4-x5*x51,
x33*x8-x48*x8, x3*x33-x4*x51, x32*x7-x47*x7, x2*x32-x3*x51, x31*x6-x46*x6, x1*x31-x2*x51,
x14*x39*x9-x29*x44*x9, x13*x38*x8-x28*x43*x8, x12*x37*x7-x27*x42*x7, x11*x36*x6-x26*x41*x6,
x26^2*x46*x6-x51^3*x7, x11^2*x46*x6-x2*x51^3, x21^2*x41*x6-x46*x51^2*x6, x16^2*x36*x6-x46*x51^2*x6,
x24*x30*x39*x50*x9-x29*x44*x50*x51*x9, x23*x29*x38*x49*x8-x28*x43*x49*x51*x8, x22*x28*x37*x48*x7-x27*x42*x48*x51*x7,
x21*x27*x36*x47*x6-x26*x41*x47*x51*x6, x24*x25*x39*x45*x9-x29*x44*x45*x51*x9, x23*x24*x38*x44*x8-x28*x43*x44*x51*x8,
x22*x23*x37*x43*x7-x27*x42*x43*x51*x7, x21*x22*x36*x42*x6-x26*x41*x42*x51*x6, x20*x24*x39*x40*x9-x29*x40*x44*x51*x9,
x19*x23*x38*x39*x8-x28*x39*x43*x51*x8, x15*x24*x35*x39*x9-x29*x35*x44*x51*x9, x18*x22*x37*x38*x7-x27*x38*x42*x51*x7,
x14*x23*x34*x38*x8-x28*x34*x43*x51*x8, x17*x21*x36*x37*x6-x26*x37*x41*x51*x6, x13*x22*x33*x37*x7-x27*x33*x42*x51*x7,
x12*x21*x32*x36*x6-x26*x32*x41*x51*x6
]:

# noon9
# sparse all-around challenge
var := [x1,x2,x3,x4,x5,x6,x7,x8,x9]:
sys := [
10*x1^2*x9+10*x2^2*x9+10*x3^2*x9+10*x4^2*x9+10*x5^2*x9+10*x6^2*x9+10*x7^2*x9+10*x8^2*x9-11*x9+10,
10*x1^2*x8+10*x2^2*x8+10*x3^2*x8+10*x4^2*x8+10*x5^2*x8+10*x6^2*x8+10*x7^2*x8+10*x8*x9^2-11*x8+10,
10*x1^2*x7+10*x2^2*x7+10*x3^2*x7+10*x4^2*x7+10*x5^2*x7+10*x6^2*x7+10*x7*x8^2+10*x7*x9^2-11*x7+10,
10*x1^2*x6+10*x2^2*x6+10*x3^2*x6+10*x4^2*x6+10*x5^2*x6+10*x6*x7^2+10*x6*x8^2+10*x6*x9^2-11*x6+10,
10*x1^2*x5+10*x2^2*x5+10*x3^2*x5+10*x4^2*x5+10*x5*x6^2+10*x5*x7^2+10*x5*x8^2+10*x5*x9^2-11*x5+10,
10*x1^2*x4+10*x2^2*x4+10*x3^2*x4+10*x4*x5^2+10*x4*x6^2+10*x4*x7^2+10*x4*x8^2+10*x4*x9^2-11*x4+10,
10*x1^2*x3+10*x2^2*x3+10*x3*x4^2+10*x3*x5^2+10*x3*x6^2+10*x3*x7^2+10*x3*x8^2+10*x3*x9^2-11*x3+10,
10*x1*x2^2+10*x1*x3^2+10*x1*x4^2+10*x1*x5^2+10*x1*x6^2+10*x1*x7^2+10*x1*x8^2+10*x1*x9^2-11*x1+10,
10*x1^2*x2+10*x2*x3^2+10*x2*x4^2+10*x2*x5^2+10*x2*x6^2+10*x2*x7^2+10*x2*x8^2+10*x2*x9^2-11*x2+10
]:

# reimer7
var := [x1,x2,x3,x4,x5,x6,x7]:
sys := [
2*x1^2 - 2*x2^2 + 2*x3^2 - 2*x4^2 + 2*x5^2 - 2*x6^2 + 2*x7^2 - 1,
2*x1^3 - 2*x2^3 + 2*x3^3 - 2*x4^3 + 2*x5^3 - 2*x6^3 + 2*x7^3 - 1,
2*x1^4 - 2*x2^4 + 2*x3^4 - 2*x4^4 + 2*x5^4 - 2*x6^4 + 2*x7^4 - 1,
2*x1^5 - 2*x2^5 + 2*x3^5 - 2*x4^5 + 2*x5^5 - 2*x6^5 + 2*x7^5 - 1,
2*x1^6 - 2*x2^6 + 2*x3^6 - 2*x4^6 + 2*x5^6 - 2*x6^6 + 2*x7^6 - 1,
2*x1^7 - 2*x2^7 + 2*x3^7 - 2*x4^7 + 2*x5^7 - 2*x6^7 + 2*x7^7 - 1,
2*x1^8 - 2*x2^8 + 2*x3^8 - 2*x4^8 + 2*x5^8 - 2*x6^8 + 2*x7^8 - 1
]:

# reimer8
var := [x1,x2,x3,x4,x5,x6,x7,x8]:
sys := [
2*x1^2 - 2*x2^2 + 2*x3^2 - 2*x4^2 + 2*x5^2 - 2*x6^2 + 2*x7^2 - 2*x8^2 - 1,
2*x1^3 - 2*x2^3 + 2*x3^3 - 2*x4^3 + 2*x5^3 - 2*x6^3 + 2*x7^3 - 2*x8^3 - 1,
2*x1^4 - 2*x2^4 + 2*x3^4 - 2*x4^4 + 2*x5^4 - 2*x6^4 + 2*x7^4 - 2*x8^4 - 1,
2*x1^5 - 2*x2^5 + 2*x3^5 - 2*x4^5 + 2*x5^5 - 2*x6^5 + 2*x7^5 - 2*x8^5 - 1,
2*x1^6 - 2*x2^6 + 2*x3^6 - 2*x4^6 + 2*x5^6 - 2*x6^6 + 2*x7^6 - 2*x8^6 - 1,
2*x1^7 - 2*x2^7 + 2*x3^7 - 2*x4^7 + 2*x5^7 - 2*x6^7 + 2*x7^7 - 2*x8^7 - 1,
2*x1^8 - 2*x2^8 + 2*x3^8 - 2*x4^8 + 2*x5^8 - 2*x6^8 + 2*x7^8 - 2*x8^8 - 1,
2*x1^9 - 2*x2^9 + 2*x3^9 - 2*x4^9 + 2*x5^9 - 2*x6^9 + 2*x7^9 - 2*x8^9 - 1
]:

# schwarz11
var := [x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11]:
sys := [
x6^2+2*x5*x7+2*x4*x8+2*x3*x9+2*x2*x10+2*x1*x11+x11,
2*x5*x6+2*x4*x7+2*x3*x8+2*x2*x9+2*x1*x10+x11^2+x10,
x5^2+2*x4*x6+2*x3*x7+2*x2*x8+2*x1*x9+2*x10*x11+x9,
2*x4*x5+2*x3*x6+2*x2*x7+2*x1*x8+x10^2+2*x9*x11+x8,
x4^2+2*x3*x5+2*x2*x6+2*x1*x7+2*x9*x10+2*x8*x11+x7,
2*x3*x4+2*x2*x5+2*x1*x6+x9^2+2*x8*x10+2*x7*x11+x6,
x3^2+2*x2*x4+2*x1*x5+2*x8*x9+2*x7*x10+2*x6*x11+x5,
2*x2*x3+2*x1*x4+x8^2+2*x7*x9+2*x6*x10+2*x5*x11+x4,
x2^2+2*x1*x3+2*x7*x8+2*x6*x9+2*x5*x10+2*x4*x11+x3,
2*x1*x2+x7^2+2*x6*x8+2*x5*x9+2*x4*x10+2*x3*x11+x2,
x1^2+2*x6*x7+2*x5*x8+2*x4*x9+2*x3*x10+2*x2*x11+x1
]:

# yang1
# sparse with many pair updates
var := [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48]:
sys := [
x21*x45+x22*x46+x23*x47+x24*x48, x17*x45+x18*x46+x19*x47+x20*x48, x13*x45+x14*x46+x15*x47+x16*x48, x10*x46+x11*x47+x12*x48+x45*x9, x45*x5+x46*x6+x47*x7+x48*x8, x1*x45+x2*x46+x3*x47+x4*x48, x21*x41+x22*x42+x23*x43+x24*x44,
x17*x41+x18*x42+x19*x43+x20*x44, x13*x41+x14*x42+x15*x43+x16*x44, x10*x42+x11*x43+x12*x44+x41*x9, x41*x5+x42*x6+x43*x7+x44*x8, x1*x41+x2*x42+x3*x43+x4*x44, x21*x37+x22*x38+x23*x39+x24*x40, x17*x37+x18*x38+x19*x39+x20*x40,
x13*x37+x14*x38+x15*x39+x16*x40, x10*x38+x11*x39+x12*x40+x37*x9, x37*x5+x38*x6+x39*x7+x40*x8, x1*x37+x2*x38+x3*x39+x4*x40, x21*x33+x22*x34+x23*x35+x24*x36, x17*x33+x18*x34+x19*x35+x20*x36, x13*x33+x14*x34+x15*x35+x16*x36,
x10*x34+x11*x35+x12*x36+x33*x9, x33*x5+x34*x6+x35*x7+x36*x8, x1*x33+x2*x34+x3*x35+x36*x4, x21*x29+x22*x30+x23*x31+x24*x32, x17*x29+x18*x30+x19*x31+x20*x32, x13*x29+x14*x30+x15*x31+x16*x32, x10*x30+x11*x31+x12*x32+x29*x9,
x29*x5+x30*x6+x31*x7+x32*x8, x1*x29+x2*x30+x3*x31+x32*x4, x21*x25+x22*x26+x23*x27+x24*x28, x17*x25+x18*x26+x19*x27+x20*x28, x13*x25+x14*x26+x15*x27+x16*x28, x10*x26+x11*x27+x12*x28+x25*x9, x25*x5+x26*x6+x27*x7+x28*x8, x1*x25+x2*x26+x27*x3+x28*x4,
x33*x38*x43*x48-x33*x38*x44*x47-x33*x39*x42*x48+x33*x39*x44*x46+x33*x40*x42*x47-x33*x40*x43*x46-x34*x37*x43*x48+x34*x37*x44*x47+x34*x39*x41*x48-x34*x39*x44*x45-x34*x40*x41*x47+x34*x40*x43*x45+x35*x37*x42*x48-x35*x37*x44*x46-x35*x38*x41*x48+x35*x38*x44*x45+x35*x40*x41*x46-x35*x40*x42*x45-x36*x37*x42*x47+x36*x37*x43*x46+x36*x38*x41*x47-x36*x38*x43*x45-x36*x39*x41*x46+x36*x39*x42*x45,
x29*x38*x43*x48-x29*x38*x44*x47-x29*x39*x42*x48+x29*x39*x44*x46+x29*x40*x42*x47-x29*x40*x43*x46-x30*x37*x43*x48+x30*x37*x44*x47+x30*x39*x41*x48-x30*x39*x44*x45-x30*x40*x41*x47+x30*x40*x43*x45+x31*x37*x42*x48-x31*x37*x44*x46-x31*x38*x41*x48+x31*x38*x44*x45+x31*x40*x41*x46-x31*x40*x42*x45-x32*x37*x42*x47+x32*x37*x43*x46+x32*x38*x41*x47-x32*x38*x43*x45-x32*x39*x41*x46+x32*x39*x42*x45,
x25*x38*x43*x48-x25*x38*x44*x47-x25*x39*x42*x48+x25*x39*x44*x46+x25*x40*x42*x47-x25*x40*x43*x46-x26*x37*x43*x48+x26*x37*x44*x47+x26*x39*x41*x48-x26*x39*x44*x45-x26*x40*x41*x47+x26*x40*x43*x45+x27*x37*x42*x48-x27*x37*x44*x46-x27*x38*x41*x48+x27*x38*x44*x45+x27*x40*x41*x46-x27*x40*x42*x45-x28*x37*x42*x47+x28*x37*x43*x46+x28*x38*x41*x47-x28*x38*x43*x45-x28*x39*x41*x46+x28*x39*x42*x45,
x29*x34*x43*x48-x29*x34*x44*x47-x29*x35*x42*x48+x29*x35*x44*x46+x29*x36*x42*x47-x29*x36*x43*x46-x30*x33*x43*x48+x30*x33*x44*x47+x30*x35*x41*x48-x30*x35*x44*x45-x30*x36*x41*x47+x30*x36*x43*x45+x31*x33*x42*x48-x31*x33*x44*x46-x31*x34*x41*x48+x31*x34*x44*x45+x31*x36*x41*x46-x31*x36*x42*x45-x32*x33*x42*x47+x32*x33*x43*x46+x32*x34*x41*x47-x32*x34*x43*x45-x32*x35*x41*x46+x32*x35*x42*x45,
x25*x34*x43*x48-x25*x34*x44*x47-x25*x35*x42*x48+x25*x35*x44*x46+x25*x36*x42*x47-x25*x36*x43*x46-x26*x33*x43*x48+x26*x33*x44*x47+x26*x35*x41*x48-x26*x35*x44*x45-x26*x36*x41*x47+x26*x36*x43*x45+x27*x33*x42*x48-x27*x33*x44*x46-x27*x34*x41*x48+x27*x34*x44*x45+x27*x36*x41*x46-x27*x36*x42*x45-x28*x33*x42*x47+x28*x33*x43*x46+x28*x34*x41*x47-x28*x34*x43*x45-x28*x35*x41*x46+x28*x35*x42*x45,
x25*x30*x43*x48-x25*x30*x44*x47-x25*x31*x42*x48+x25*x31*x44*x46+x25*x32*x42*x47-x25*x32*x43*x46-x26*x29*x43*x48+x26*x29*x44*x47+x26*x31*x41*x48-x26*x31*x44*x45-x26*x32*x41*x47+x26*x32*x43*x45+x27*x29*x42*x48-x27*x29*x44*x46-x27*x30*x41*x48+x27*x30*x44*x45+x27*x32*x41*x46-x27*x32*x42*x45-x28*x29*x42*x47+x28*x29*x43*x46+x28*x30*x41*x47-x28*x30*x43*x45-x28*x31*x41*x46+x28*x31*x42*x45,
x29*x34*x39*x48-x29*x34*x40*x47-x29*x35*x38*x48+x29*x35*x40*x46+x29*x36*x38*x47-x29*x36*x39*x46-x30*x33*x39*x48+x30*x33*x40*x47+x30*x35*x37*x48-x30*x35*x40*x45-x30*x36*x37*x47+x30*x36*x39*x45+x31*x33*x38*x48-x31*x33*x40*x46-x31*x34*x37*x48+x31*x34*x40*x45+x31*x36*x37*x46-x31*x36*x38*x45-x32*x33*x38*x47+x32*x33*x39*x46+x32*x34*x37*x47-x32*x34*x39*x45-x32*x35*x37*x46+x32*x35*x38*x45,
x25*x34*x39*x48-x25*x34*x40*x47-x25*x35*x38*x48+x25*x35*x40*x46+x25*x36*x38*x47-x25*x36*x39*x46-x26*x33*x39*x48+x26*x33*x40*x47+x26*x35*x37*x48-x26*x35*x40*x45-x26*x36*x37*x47+x26*x36*x39*x45+x27*x33*x38*x48-x27*x33*x40*x46-x27*x34*x37*x48+x27*x34*x40*x45+x27*x36*x37*x46-x27*x36*x38*x45-x28*x33*x38*x47+x28*x33*x39*x46+x28*x34*x37*x47-x28*x34*x39*x45-x28*x35*x37*x46+x28*x35*x38*x45,
x25*x30*x39*x48-x25*x30*x40*x47-x25*x31*x38*x48+x25*x31*x40*x46+x25*x32*x38*x47-x25*x32*x39*x46-x26*x29*x39*x48+x26*x29*x40*x47+x26*x31*x37*x48-x26*x31*x40*x45-x26*x32*x37*x47+x26*x32*x39*x45+x27*x29*x38*x48-x27*x29*x40*x46-x27*x30*x37*x48+x27*x30*x40*x45+x27*x32*x37*x46-x27*x32*x38*x45-x28*x29*x38*x47+x28*x29*x39*x46+x28*x30*x37*x47-x28*x30*x39*x45-x28*x31*x37*x46+x28*x31*x38*x45,
x25*x30*x35*x48-x25*x30*x36*x47-x25*x31*x34*x48+x25*x31*x36*x46+x25*x32*x34*x47-x25*x32*x35*x46-x26*x29*x35*x48+x26*x29*x36*x47+x26*x31*x33*x48-x26*x31*x36*x45-x26*x32*x33*x47+x26*x32*x35*x45+x27*x29*x34*x48-x27*x29*x36*x46-x27*x30*x33*x48+x27*x30*x36*x45+x27*x32*x33*x46-x27*x32*x34*x45-x28*x29*x34*x47+x28*x29*x35*x46+x28*x30*x33*x47-x28*x30*x35*x45-x28*x31*x33*x46+x28*x31*x34*x45,
x29*x34*x39*x44-x29*x34*x40*x43-x29*x35*x38*x44+x29*x35*x40*x42+x29*x36*x38*x43-x29*x36*x39*x42-x30*x33*x39*x44+x30*x33*x40*x43+x30*x35*x37*x44-x30*x35*x40*x41-x30*x36*x37*x43+x30*x36*x39*x41+x31*x33*x38*x44-x31*x33*x40*x42-x31*x34*x37*x44+x31*x34*x40*x41+x31*x36*x37*x42-x31*x36*x38*x41-x32*x33*x38*x43+x32*x33*x39*x42+x32*x34*x37*x43-x32*x34*x39*x41-x32*x35*x37*x42+x32*x35*x38*x41,
x25*x34*x39*x44-x25*x34*x40*x43-x25*x35*x38*x44+x25*x35*x40*x42+x25*x36*x38*x43-x25*x36*x39*x42-x26*x33*x39*x44+x26*x33*x40*x43+x26*x35*x37*x44-x26*x35*x40*x41-x26*x36*x37*x43+x26*x36*x39*x41+x27*x33*x38*x44-x27*x33*x40*x42-x27*x34*x37*x44+x27*x34*x40*x41+x27*x36*x37*x42-x27*x36*x38*x41-x28*x33*x38*x43+x28*x33*x39*x42+x28*x34*x37*x43-x28*x34*x39*x41-x28*x35*x37*x42+x28*x35*x38*x41,
x25*x30*x39*x44-x25*x30*x40*x43-x25*x31*x38*x44+x25*x31*x40*x42+x25*x32*x38*x43-x25*x32*x39*x42-x26*x29*x39*x44+x26*x29*x40*x43+x26*x31*x37*x44-x26*x31*x40*x41-x26*x32*x37*x43+x26*x32*x39*x41+x27*x29*x38*x44-x27*x29*x40*x42-x27*x30*x37*x44+x27*x30*x40*x41+x27*x32*x37*x42-x27*x32*x38*x41-x28*x29*x38*x43+x28*x29*x39*x42+x28*x30*x37*x43-x28*x30*x39*x41-x28*x31*x37*x42+x28*x31*x38*x41,
x25*x30*x35*x44-x25*x30*x36*x43-x25*x31*x34*x44+x25*x31*x36*x42+x25*x32*x34*x43-x25*x32*x35*x42-x26*x29*x35*x44+x26*x29*x36*x43+x26*x31*x33*x44-x26*x31*x36*x41-x26*x32*x33*x43+x26*x32*x35*x41+x27*x29*x34*x44-x27*x29*x36*x42-x27*x30*x33*x44+x27*x30*x36*x41+x27*x32*x33*x42-x27*x32*x34*x41-x28*x29*x34*x43+x28*x29*x35*x42+x28*x30*x33*x43-x28*x30*x35*x41-x28*x31*x33*x42+x28*x31*x34*x41,
x25*x30*x35*x40-x25*x30*x36*x39-x25*x31*x34*x40+x25*x31*x36*x38+x25*x32*x34*x39-x25*x32*x35*x38-x26*x29*x35*x40+x26*x29*x36*x39+x26*x31*x33*x40-x26*x31*x36*x37-x26*x32*x33*x39+x26*x32*x35*x37+x27*x29*x34*x40-x27*x29*x36*x38-x27*x30*x33*x40+x27*x30*x36*x37+x27*x32*x33*x38-x27*x32*x34*x37-x28*x29*x34*x39+x28*x29*x35*x38+x28*x30*x33*x39-x28*x30*x35*x37-x28*x31*x33*x38+x28*x31*x34*x37,
-x10*x13*x19*x24+x10*x13*x20*x23+x10*x15*x17*x24-x10*x15*x20*x21-x10*x16*x17*x23+x10*x16*x19*x21+x11*x13*x18*x24-x11*x13*x20*x22-x11*x14*x17*x24+x11*x14*x20*x21+x11*x16*x17*x22-x11*x16*x18*x21-x12*x13*x18*x23+x12*x13*x19*x22+x12*x14*x17*x23-x12*x14*x19*x21-x12*x15*x17*x22+x12*x15*x18*x21+x14*x19*x24*x9-x14*x20*x23*x9-x15*x18*x24*x9+x15*x20*x22*x9+x16*x18*x23*x9-x16*x19*x22*x9,
-x13*x18*x23*x8+x13*x18*x24*x7+x13*x19*x22*x8-x13*x19*x24*x6-x13*x20*x22*x7+x13*x20*x23*x6+x14*x17*x23*x8-x14*x17*x24*x7-x14*x19*x21*x8+x14*x19*x24*x5+x14*x20*x21*x7-x14*x20*x23*x5-x15*x17*x22*x8+x15*x17*x24*x6+x15*x18*x21*x8-x15*x18*x24*x5-x15*x20*x21*x6+x15*x20*x22*x5+x16*x17*x22*x7-x16*x17*x23*x6-x16*x18*x21*x7+x16*x18*x23*x5+x16*x19*x21*x6-x16*x19*x22*x5,
x1*x14*x19*x24-x1*x14*x20*x23-x1*x15*x18*x24+x1*x15*x20*x22+x1*x16*x18*x23-x1*x16*x19*x22-x13*x18*x23*x4+x13*x18*x24*x3-x13*x19*x2*x24+x13*x19*x22*x4+x13*x2*x20*x23-x13*x20*x22*x3+x14*x17*x23*x4-x14*x17*x24*x3-x14*x19*x21*x4+x14*x20*x21*x3+x15*x17*x2*x24-x15*x17*x22*x4+x15*x18*x21*x4-x15*x2*x20*x21-x16*x17*x2*x23+x16*x17*x22*x3-x16*x18*x21*x3+x16*x19*x2*x21,
x10*x17*x23*x8-x10*x17*x24*x7-x10*x19*x21*x8+x10*x19*x24*x5+x10*x20*x21*x7-x10*x20*x23*x5-x11*x17*x22*x8+x11*x17*x24*x6+x11*x18*x21*x8-x11*x18*x24*x5-x11*x20*x21*x6+x11*x20*x22*x5+x12*x17*x22*x7-x12*x17*x23*x6-x12*x18*x21*x7+x12*x18*x23*x5+x12*x19*x21*x6-x12*x19*x22*x5-x18*x23*x8*x9+x18*x24*x7*x9+x19*x22*x8*x9-x19*x24*x6*x9-x20*x22*x7*x9+x20*x23*x6*x9,
x1*x10*x19*x24-x1*x10*x20*x23-x1*x11*x18*x24+x1*x11*x20*x22+x1*x12*x18*x23-x1*x12*x19*x22+x10*x17*x23*x4-x10*x17*x24*x3-x10*x19*x21*x4+x10*x20*x21*x3+x11*x17*x2*x24-x11*x17*x22*x4+x11*x18*x21*x4-x11*x2*x20*x21-x12*x17*x2*x23+x12*x17*x22*x3-x12*x18*x21*x3+x12*x19*x2*x21-x18*x23*x4*x9+x18*x24*x3*x9-x19*x2*x24*x9+x19*x22*x4*x9+x2*x20*x23*x9-x20*x22*x3*x9,
x1*x18*x23*x8-x1*x18*x24*x7-x1*x19*x22*x8+x1*x19*x24*x6+x1*x20*x22*x7-x1*x20*x23*x6-x17*x2*x23*x8+x17*x2*x24*x7+x17*x22*x3*x8-x17*x22*x4*x7+x17*x23*x4*x6-x17*x24*x3*x6-x18*x21*x3*x8+x18*x21*x4*x7-x18*x23*x4*x5+x18*x24*x3*x5+x19*x2*x21*x8-x19*x2*x24*x5-x19*x21*x4*x6+x19*x22*x4*x5-x2*x20*x21*x7+x2*x20*x23*x5+x20*x21*x3*x6-x20*x22*x3*x5,
x10*x13*x23*x8-x10*x13*x24*x7-x10*x15*x21*x8+x10*x15*x24*x5+x10*x16*x21*x7-x10*x16*x23*x5-x11*x13*x22*x8+x11*x13*x24*x6+x11*x14*x21*x8-x11*x14*x24*x5-x11*x16*x21*x6+x11*x16*x22*x5+x12*x13*x22*x7-x12*x13*x23*x6-x12*x14*x21*x7+x12*x14*x23*x5+x12*x15*x21*x6-x12*x15*x22*x5-x14*x23*x8*x9+x14*x24*x7*x9+x15*x22*x8*x9-x15*x24*x6*x9-x16*x22*x7*x9+x16*x23*x6*x9,
x1*x10*x15*x24-x1*x10*x16*x23-x1*x11*x14*x24+x1*x11*x16*x22+x1*x12*x14*x23-x1*x12*x15*x22+x10*x13*x23*x4-x10*x13*x24*x3-x10*x15*x21*x4+x10*x16*x21*x3+x11*x13*x2*x24-x11*x13*x22*x4+x11*x14*x21*x4-x11*x16*x2*x21-x12*x13*x2*x23+x12*x13*x22*x3-x12*x14*x21*x3+x12*x15*x2*x21-x14*x23*x4*x9+x14*x24*x3*x9-x15*x2*x24*x9+x15*x22*x4*x9+x16*x2*x23*x9-x16*x22*x3*x9,
x1*x14*x23*x8-x1*x14*x24*x7-x1*x15*x22*x8+x1*x15*x24*x6+x1*x16*x22*x7-x1*x16*x23*x6-x13*x2*x23*x8+x13*x2*x24*x7+x13*x22*x3*x8-x13*x22*x4*x7+x13*x23*x4*x6-x13*x24*x3*x6-x14*x21*x3*x8+x14*x21*x4*x7-x14*x23*x4*x5+x14*x24*x3*x5+x15*x2*x21*x8-x15*x2*x24*x5-x15*x21*x4*x6+x15*x22*x4*x5-x16*x2*x21*x7+x16*x2*x23*x5+x16*x21*x3*x6-x16*x22*x3*x5,
x1*x10*x23*x8-x1*x10*x24*x7-x1*x11*x22*x8+x1*x11*x24*x6+x1*x12*x22*x7-x1*x12*x23*x6-x10*x21*x3*x8+x10*x21*x4*x7-x10*x23*x4*x5+x10*x24*x3*x5+x11*x2*x21*x8-x11*x2*x24*x5-x11*x21*x4*x6+x11*x22*x4*x5-x12*x2*x21*x7+x12*x2*x23*x5+x12*x21*x3*x6-x12*x22*x3*x5-x2*x23*x8*x9+x2*x24*x7*x9+x22*x3*x8*x9-x22*x4*x7*x9+x23*x4*x6*x9-x24*x3*x6*x9,
x10*x13*x19*x8-x10*x13*x20*x7-x10*x15*x17*x8+x10*x15*x20*x5+x10*x16*x17*x7-x10*x16*x19*x5-x11*x13*x18*x8+x11*x13*x20*x6+x11*x14*x17*x8-x11*x14*x20*x5-x11*x16*x17*x6+x11*x16*x18*x5+x12*x13*x18*x7-x12*x13*x19*x6-x12*x14*x17*x7+x12*x14*x19*x5+x12*x15*x17*x6-x12*x15*x18*x5-x14*x19*x8*x9+x14*x20*x7*x9+x15*x18*x8*x9-x15*x20*x6*x9-x16*x18*x7*x9+x16*x19*x6*x9,
x1*x10*x15*x20-x1*x10*x16*x19-x1*x11*x14*x20+x1*x11*x16*x18+x1*x12*x14*x19-x1*x12*x15*x18+x10*x13*x19*x4-x10*x13*x20*x3-x10*x15*x17*x4+x10*x16*x17*x3-x11*x13*x18*x4+x11*x13*x2*x20+x11*x14*x17*x4-x11*x16*x17*x2+x12*x13*x18*x3-x12*x13*x19*x2-x12*x14*x17*x3+x12*x15*x17*x2-x14*x19*x4*x9+x14*x20*x3*x9+x15*x18*x4*x9-x15*x2*x20*x9-x16*x18*x3*x9+x16*x19*x2*x9,
x1*x14*x19*x8-x1*x14*x20*x7-x1*x15*x18*x8+x1*x15*x20*x6+x1*x16*x18*x7-x1*x16*x19*x6+x13*x18*x3*x8-x13*x18*x4*x7-x13*x19*x2*x8+x13*x19*x4*x6+x13*x2*x20*x7-x13*x20*x3*x6-x14*x17*x3*x8+x14*x17*x4*x7-x14*x19*x4*x5+x14*x20*x3*x5+x15*x17*x2*x8-x15*x17*x4*x6+x15*x18*x4*x5-x15*x2*x20*x5-x16*x17*x2*x7+x16*x17*x3*x6-x16*x18*x3*x5+x16*x19*x2*x5,
x1*x10*x19*x8-x1*x10*x20*x7-x1*x11*x18*x8+x1*x11*x20*x6+x1*x12*x18*x7-x1*x12*x19*x6-x10*x17*x3*x8+x10*x17*x4*x7-x10*x19*x4*x5+x10*x20*x3*x5+x11*x17*x2*x8-x11*x17*x4*x6+x11*x18*x4*x5-x11*x2*x20*x5-x12*x17*x2*x7+x12*x17*x3*x6-x12*x18*x3*x5+x12*x19*x2*x5+x18*x3*x8*x9-x18*x4*x7*x9-x19*x2*x8*x9+x19*x4*x6*x9+x2*x20*x7*x9-x20*x3*x6*x9,
x1*x10*x15*x8-x1*x10*x16*x7-x1*x11*x14*x8+x1*x11*x16*x6+x1*x12*x14*x7-x1*x12*x15*x6-x10*x13*x3*x8+x10*x13*x4*x7-x10*x15*x4*x5+x10*x16*x3*x5+x11*x13*x2*x8-x11*x13*x4*x6+x11*x14*x4*x5-x11*x16*x2*x5-x12*x13*x2*x7+x12*x13*x3*x6-x12*x14*x3*x5+x12*x15*x2*x5+x14*x3*x8*x9-x14*x4*x7*x9-x15*x2*x8*x9+x15*x4*x6*x9+x16*x2*x7*x9-x16*x3*x6*x9
]:
